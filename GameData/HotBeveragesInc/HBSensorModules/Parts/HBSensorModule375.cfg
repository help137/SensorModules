// HBSensorModule375 v1.0
// HotBeverages
// created: 01 Sept 19
// updated: 09 Oct 19

// *****************- 3.75 m ------------
+PART[HBSensorModule0625]:NEEDS[HotBeverages]:FOR[HBSensorModules]
{
	// Hot Beverage Inc. - Super Generic Sensor Module
	// Science for everyone!
	// 

	// --- general parameters ---
	@name = HBSensorModule375
	@author ^= :$:,zed'K:

	//@rescaleFactor = 3.75
	@MODEL
	{
		@scale = 3.0, 1.0, 3.0
		//@scale[*, ] *= 3
	}
	// --- editor parameters ---
	@TechRequired = spaceExploration
	@entryCost = 17000
	@cost = 14000
	@title ^= :0.625:3.75:
	@description ^= :A super:A 3.75m super:
	
	// --- standard part parameters ---
	@mass *= 3
	@maxTemp += 300
	@bulkheadProfiles = size3

	@tags ^= :^:)charge )electric :

	@MODULE[ModuleEnviroSensor]:HAS[#sensorType[ACC]]
	{
		@RESOURCE[ElectricCharge]
		{
		@rate = 0.001
		}
	}

	@MODULE[ModuleEnviroSensor]:HAS[#sensorType[PRES]]
	{
		@RESOURCE[ElectricCharge]
		{
		@rate = 0.001
		}
	}

	@MODULE[ModuleEnviroSensor]:HAS[#sensorType[GRAV]]
	{
		@RESOURCE[ElectricCharge]
		{
		@rate = 0.001
		}
	}

	@MODULE[ModuleEnviroSensor]:HAS[#sensorType[TEMP]]
	{
		@RESOURCE[ElectricCharge]
		{
		@rate = 0.001
		}
	}

	@MODULE[ModuleScienceExperiment]:HAS[#experimentID[seismicScan]]
	{
		@xmitDataScalar = 0.45
		@interactionRange = 1.2
	}

	@MODULE[ModuleScienceExperiment]:HAS[#experimentID[barometerScan]]
	{
		@xmitDataScalar = 0.5
		@rerunnable = True
	}

	@MODULE[ModuleScienceExperiment]:HAS[#experimentID[gravityScan]]
	{
		@xmitDataScalar = 0.4
		@interactionRange = 1.2
	}

	@MODULE[ModuleScienceExperiment]:HAS[#experimentID[temperatureScan]]
	{
		@xmitDataScalar = 0.5
		@interactionRange = 1.2
	}

	@MODULE[ModuleScienceExperiment]:HAS[#experimentID[mysteryGoo]]
	{
		@xmitDataScalar = 0.3
		@interactionRange = 1.2
	}

	@MODULE[ModuleScienceExperiment]:HAS[#experimentID[mobileMaterialsLab]]
	{
		@moduleIsEnabled = true
		@hideUIwhenUnavailable = false
		@xmitDataScalar = 0.70
		@interactionRange *= 2
	}

	@MODULE[ModuleScienceExperiment]:HAS[#experimentID[atmosphereAnalysis]]
	{
		@moduleIsEnabled = true
		@hideUIwhenUnavailable = false
		@xmitDataScalar = 0.70
		@interactionRange *= 2
	}

// ModuleGenerator
	MODULE
	{
		name = ModuleGenerator
		activateGUIName = #autoLOC_235502
		displayStatus = string.Empty
		efficiency = 0f
		efficiencyGUIName = #autoLOC_6001422
		generatorIsActive = false
		isAlwaysActive = false
		isGroundFixture = false
		isThrottleControlled = false
		throttle = 0f
		requiresAllInputs = true
		resourceThreshold = 0.1f
		status = string.Empty
		shutdownGUIName = #autoLOC_235505
		statusGUIName = #autoLOC_235532
		toggleGUIName = #autoLOC_235508
		OUTPUT_RESOURCE
		{
			name = ElectricCharge
			rate = 7.0
	  }
		INPUT_RESOURCE
		{
			name = MonoPropellant
			rate = 0.07
		}
	}

	@description ^= :$: <color=orange>Electric Charge: 2500</color> :
// ElectricCharge
	RESOURCE
	{
		name = ElectricCharge
		amount = 2500
		maxAmount = 2500
	}
// MonoPropellant
	RESOURCE
	{
		name = MonoPropellant
		amount = 100
		maxAmount = 100
	}
// PART
// {
	// name = HBSensorModule375
	// module = Part
	// author = ph34rb0t,zed'K
	// rescaleFactor = 1.0
	// node_stack_top = 0.0, 0.083, 0.0, 0.0, 1.0, 0.0,1
	// node_stack_bottom = 0.0, -0.083, 0.0, 0.0, -1.0, 0.0,1
	// TechRequired = spaceExploration
	// entryCost = 17000
	// cost = 14000
	// category = Science
	// subcategory = 0
	// title = 3.75m Sensor Module
	// manufacturer = Hot Beverage Inc.
	// description = A 3.75m super generic, stackable sensor module, containing acceleration, pressure, gravity and temperature sensors. And goo! It's like science, but encased! <color=orange>Electric Charge
	// tags =  hot )bev beverages sensor )charge )electric science
	// attachRules = 1,0,1,1,0
	// mass = 0.03
	// dragModelType = default
	// maximum_drag = 0.1
	// minimum_drag = 0.1
	// angularDrag = 1
	// crashTolerance = 6
	// maxTemp = 1700
	// bulkheadProfiles = size3
	// tags = science
	// MODEL
	// {
		// model = HotBeverages/Assets/SensorMd
		// scale = 3.0, 1.0, 3.0
	// }
	// MODULE
	// {
		// name = ModuleEnviroSensor
		// sensorType = ACC
		// sensorActive = true
		// moduleIsEnabled = true
		// RESOURCE
		// {
			// name = ElectricCharge
			// rate = 0.001
		// }
	// }
	// MODULE
	// {
		// name = ModuleEnviroSensor
		// sensorType = PRES
		// sensorActive = true
		// moduleIsEnabled = true
		// RESOURCE
		// {
			// name = ElectricCharge
			// rate = 0.001
		// }
	// }
	// MODULE
	// {
		// name = ModuleEnviroSensor
		// sensorType = GRAV
		// sensorActive = true
		// moduleIsEnabled = true
		// RESOURCE
		// {
			// name = ElectricCharge
			// rate = 0.001
		// }
	// }
	// MODULE
	// {
		// name = ModuleEnviroSensor
		// sensorType = TEMP
		// sensorActive = true
		// moduleIsEnabled = true
		// RESOURCE
		// {
			// name = ElectricCharge
			// rate = 0.001
		// }
	// }
	// MODULE
	// {
		// name = ModuleScienceExperiment
		// experimentID = seismicScan
		// moduleIsEnabled = true
		// experimentActionName = Log Seismic Data
		// resetActionName = Delete Data
		// useStaging = False
		// useActionGroups = True
		// hideUIwhenUnavailable = False
		// xmitDataScalar = 0.45
		// dataIsCollectable = True
		// collectActionName = Take Data
		// interactionRange = 1.2
		// rerunnable = True
	// }
	// MODULE
	// {
		// name = ModuleScienceExperiment
		// experimentID = barometerScan
		// moduleIsEnabled = true
		// experimentActionName = Log Pressure Data
		// resetActionName = Delete Data
		// useStaging = False
		// useActionGroups = True
		// hideUIwhenUnavailable = False
		// xmitDataScalar = 0.5
		// dataIsCollectable = True
		// collectActionName = Take Data
		// interactionRange = 1.5
		// rerunnable = True
	// }
	// MODULE
	// {
		// name = ModuleScienceExperiment
		// experimentID = gravityScan
		// moduleIsEnabled = true
		// experimentActionName = Log Gravity Data
		// resetActionName = Delete Data
		// useStaging = False
		// useActionGroups = True
		// hideUIwhenUnavailable = False
		// xmitDataScalar = 0.4
		// dataIsCollectable = True
		// collectActionName = Take Data
		// interactionRange = 1.2
		// rerunnable = True
	// }
	// MODULE
	// {
		// name = ModuleScienceExperiment
		// experimentID = temperatureScan
		// moduleIsEnabled = true
		// experimentActionName = Log Temperature
		// resetActionName = Delete Data
		// useStaging = False
		// useActionGroups = True
		// hideUIwhenUnavailable = False
		// xmitDataScalar = 0.5
		// dataIsCollectable = True
		// collectActionName = Take Data
		// interactionRange = 1.2
		// rerunnable = True
	// }
	// MODULE
	// {
		// name = ModuleScienceExperiment
		// experimentID = mysteryGoo
		// moduleIsEnabled = true
		// experimentActionName = Observe Mystery Goo
		// resetActionName = Reset Goo Canister
		// useStaging = False
		// useActionGroups = True
		// hideUIwhenUnavailable = True
		// xmitDataScalar = 0.3
		// FxModules = 0
		// dataIsCollectable = True
		// collectActionName = Collect Data
		// interactionRange = 1.2
	// }
	// MODULE
	// {
		// name = ModuleScienceExperiment
		// experimentID = mobileMaterialsLab
		// moduleIsEnabled = true
		// experimentActionName = Observe Materials Bay
		// resetActionName = Reset Materials Bay
		// useStaging = False
		// useActionGroups = True
		// hideUIwhenUnavailable = false
		// hideFxModuleUI = False
		// xmitDataScalar = 0.70
		// FxModules = 0
		// dataIsCollectable = True
		// collectActionName = Collect Data
		// interactionRange = 3.7
	// }
	// MODULE
	// {
		// name = ModuleScienceExperiment
		// experimentID = atmosphereAnalysis
		// moduleIsEnabled = true
		// experimentActionName = Run Atmosphere Analysis
		// resetActionName = Discard Data
		// reviewActionName = Review Data
		// useStaging = False
		// useActionGroups = True
		// hideUIwhenUnavailable = false
		// xmitDataScalar = 0.70
		// dataIsCollectable = True
		// collectActionName = Download Data
		// interactionRange = 3
		// rerunnable = True
	// }
	// MODULE
	// {
		// name = ModuleScienceContainer
		// reviewActionName = Review Stored Data
		// storeActionName = Store Experiments
		// evaOnlyStorage = True
		// storageRange = 1.3
		// canBeTransferredToInVessel = True
		// canTransferInVessel = True
		// showStatus = True
	// }

// }
}

// CC BY-NC-SA-4.0 by zer0Kerbal